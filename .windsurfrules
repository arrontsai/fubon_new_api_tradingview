# code pattern preferences

1. 簡單的解決方案
總是偏好簡單的解決方案。

2. 避免重複的代碼
盡可能避免重複的代碼。這意味著需要檢查代碼庫中的其他部分，以確保沒有類似的代碼和功能。

3. 考慮不同的環境
寫出能夠在不同的環境中運作的代碼，包括開發（dev）、測試（test）和生產（prod）環境。

4. 講謹慎修改
只進行已經被要求或您完全理解且與所需變更相關的修改。

5. 修復問題時的原則
在修復問題或漏洞時，應該盡量使用現有的實現方式。只有在現有實現無法解決問題時，才考慮引入新的模式或技術。如果最終引入了新技術，請確保刪除舊有的實現，以避免重複邏輯。

6. 保持代碼整潔
保持代碼庫非常整潔和有序。

7. 避免腳本文件
盡可能避免在文件中寫腳本，特別是如果腳本只需要運行一次。

8. 文件大小限制
避免文件超過200-300行代碼。超過這個限制時應該進行重構。

9. 模擬數據
模擬數據只應該用於測試環境，絕不能在開發或生產環境中使用模擬數據。

10. 不添加假數據模式
絕不能在影響開發或生產環境的代碼中添加假數據或模擬模式。

11. 環境變數文件
絕不能在未經允許和確認的情況下覆蓋 .env 文件。

12. 語言選擇
請用繁體中文說明。
請用繁體中文寫程式的註解。